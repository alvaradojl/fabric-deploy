---
- name: Get start timestamp
  hosts: cloud
  connection: local
  tasks:
    - set_fact:
        starttime: "{{ ansible_date_time }}"

- name: Prepare to run the workload
  hosts: cloud
  connection: local
  vars_files:
    - "vars/{{ env }}.yml"
  tasks:
    - include: "roles/prepare/tasks/{{ mode }}.yml"
  roles:
    - prepare
  tags: "prepare"

- name: provision servers
  hosts: prohosts
  connection: local
  strategy: free
  vars_files:
    - "vars/{{ env }}.yml"
  tasks:
    - include: "roles/provision/tasks/{{ mode }}.yml"
  roles:
    - provision
  tags: "provision"

- name: Post provision process
  hosts: cloud
  connection: local
  vars_files:
    - "vars/{{ env }}.yml"
  tasks:
    - include: "roles/postprovision/tasks/{{ mode }}.yml"
  roles:
    - postprovision
  tags: "postprovision"

#This play uses hyperledger base image setup scripts to initialize
#a server which does dist-upgrade, it will take forever, if you are
#not building a base image, please do not run this play.
- name: initialize all the servers
  hosts: allnodes
  strategy: free
  user: "{{ cluster.ssh_user }}"
  become: true
  become_user: root
  vars_files:
    - "vars/{{ env }}.yml"
  tasks:
    - include: "roles/initnode/tasks/{{ mode }}.yml"
  roles:
    - initnode
  tags: "initnode"

- name: change /etc/hosts files so that each node knows other nodes
  hosts: allnodes
  strategy: free
  user: "{{ cluster.ssh_user }}"
  become: true
  become_user: root
  vars_files:
    - "vars/{{ env }}.yml"
  tasks:
    - include: "roles/namenode/tasks/{{ mode }}.yml"
  roles:
    - namenode
  tags: "namenode"

- name: Inform the installer
  hosts: cloud
  connection: local
  tasks:
    - debug:
        msg: >-
          The work load started at {{ hostvars.cloud.starttime.time }},
          ended at {{ ansible_date_time.time }}