---
- name: Setup variables
  set_fact:
    etcd_cluster: ""
    node_ip: "{{ hostvars[inventory_hostname].private_ip }}"

- name: Get etcd ip address
  set_fact:
    etcd_ip: "{{ hostvars[groups['etcdnodes'][0]].private_ip }}"
  when: groups['etcdnodes'][0] is defined

- name: Reset etcd
  uri:
    url: "http://{{ etcd_ip }}:2379/v2/keys/skydns?recursive=true"
    method: DELETE
    status_code: 200,202,204,404
  when: inventory_hostname == groups['allnodes'][0]

- name: Initialize skydns configuration in etcd
  uri:
    url: http://{{ etcd_ip }}:2379/v2/keys/skydns/config
    method: PUT
    body: value={"ttl":3600, "domain":"fabric."}
    status_code: 200,201
  when: inventory_hostname == groups['allnodes'][0]

- name: Create etcd cluster endpoint parameter
  set_fact:
    etcd_cluster: "{{ etcd_cluster }} http://{{ hostvars[item].private_ip }}:2379"
  with_items: "{{ groups['etcdnodes'] }}"

- name: Make the endpoint the right format
  set_fact:
    etcd_cluster: "{{ etcd_cluster | trim | replace(' ', ',') }}"

- name: Wait for the flannel to setup the subnets
  wait_for:
    path: /run/flannel/subnet.env
    search_regex: FLANNEL_SUBNET

- name: Get the bip address
  shell: >-
    . /run/flannel/subnet.env && echo $FLANNEL_SUBNET
  register: bip

- name: Get the mtu
  shell: >-
    . /run/flannel/subnet.env && echo $FLANNEL_MTU
  register: mtu

- name: Setup Docker service file
  template:
    src: "roles/dnssetup/templates/docker.j2"
    dest: "/lib/systemd/system/docker.service"

- name: Reload daemon service
  command: systemctl daemon-reload

- name: Restart the docker services
  service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
  with_items:
    - docker.socket
    - docker

- name: Check if there are existing skydns containers
  command: docker ps -a -f name=skydns
  register: hasContainer

- name: Remove the existing skydns and registrator containers
  command: docker rm -f skydns registrator
  when: hasContainer.stdout_lines | length > 1

- name: Get nameservers
  shell: cat '/etc/resolv.conf'|grep nameserver|awk '{print $2 ":53"}'
  register: nameservers

- name: Start skydns service
  command: >
    docker run -d --name skydns --net=host -p 53:53/udp
    skynetservices/skydns:2.5.3a -machines {{ etcd_cluster }}
    -nameservers {{ nameservers.stdout_lines | join(',') }}
    -addr {{ node_ip }}:53 -local fabric

- name: Start registrator service
  command: >
    docker run -d --name registrator
    -v /var/run/docker.sock:/tmp/docker.sock
    email4tong/registrator:latest -internal -ttl 30 -ttl-refresh 20
    -resync 18
    skydns2://{{ groups['etcdnodes'] | random }}:2379/fabric